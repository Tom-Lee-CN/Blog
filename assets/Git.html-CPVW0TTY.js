import{_ as n,c as a,d as e,o as p}from"./app-DENUgqCH.js";const l={};function i(t,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="git" tabindex="-1"><a class="header-anchor" href="#git"><span>GIT</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 这个命令，会在“~/.gitconfig”中以如下形式输出设置文件。</span></span>
<span class="line">$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name <span class="token string">&quot;Firstname Lastname&quot;</span></span>
<span class="line">$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email <span class="token string">&quot;your_email@example.com&quot;</span></span>
<span class="line"><span class="token punctuation">[</span>user<span class="token punctuation">]</span></span>
<span class="line">  name <span class="token operator">=</span> Firstname Lastname</span>
<span class="line">  email <span class="token operator">=</span> your_email@example<span class="token punctuation">.</span>com</span>
<span class="line"></span>
<span class="line"><span class="token comment">// 将 color.ui 设置为 auto 可以让命令的输出拥有更高的可读性。</span></span>
<span class="line">git config <span class="token operator">--</span>global color<span class="token punctuation">.</span>ui auto</span>
<span class="line"><span class="token comment">// “~/.gitconfig”中就会增加下面一行。</span></span>
<span class="line"><span class="token punctuation">[</span>color<span class="token punctuation">]</span></span>
<span class="line">  ui <span class="token operator">=</span> auto</span>
<span class="line"></span>
<span class="line"><span class="token comment">//生成SSH后复制至GitHub同步</span></span>
<span class="line">git<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span><span class="token constant">C</span></span>
<span class="line"><span class="token comment">// 1. git初始化 (必须初始化)</span></span>
<span class="line">git init</span>
<span class="line"><span class="token comment">// 2. 查看仓库状态</span></span>
<span class="line">git status</span>
<span class="line"><span class="token comment">// 3. 向暂存区添加文件</span></span>
<span class="line">git add</span>
<span class="line"><span class="token comment">// 4. 保存仓库的历史纪录 git commit -m &quot;快速备注&quot;。vim编辑器使用i进行输入，写详细备注时第一行是简要内容，第二行空行，第三行是详细内容。输入完成后按ESC输入:wq完成编辑</span></span>
<span class="line">git commit</span>
<span class="line"><span class="token comment">// 中止提交</span></span>
<span class="line">如果在编辑器启动后想中止提交，提交信息留空并直接关闭编辑器，随后提交就会被中止。</span>
<span class="line"><span class="token comment">// 修改上一条提交的信息</span></span>
<span class="line">git commit <span class="token operator">--</span>amend</span>
<span class="line"><span class="token comment">// 5. 查看提交日志 git log -p可查看文件的改动</span></span>
<span class="line">git log</span>
<span class="line"><span class="token comment">// 6. 查看当前暂存区与工作树的差别,git diff HEAD是最新差别</span></span>
<span class="line">git diff</span>
<span class="line"></span>
<span class="line"><span class="token comment">// 显示分支一览表  git branch -a可以查看当前仓库和远程仓库的分支信息</span></span>
<span class="line">git branch </span>
<span class="line"><span class="token comment">// 切换分支</span></span>
<span class="line">git checkout <span class="token operator">-</span>b 分支名</span>
<span class="line"><span class="token comment">// 合并分支</span></span>
<span class="line">git merge <span class="token operator">--</span>no<span class="token operator">-</span>ff 分支名</span>
<span class="line"><span class="token comment">// 以图标形式查看分支</span></span>
<span class="line">git log <span class="token operator">--</span>graph</span>
<span class="line"><span class="token comment">// 回溯历史版本</span></span>
<span class="line">git reset <span class="token operator">--</span>head 历史版本的哈希值</span>
<span class="line"><span class="token comment">// 查看当前仓库执行过的操作的日志</span></span>
<span class="line">git reflog</span>
<span class="line"></span>
<span class="line"><span class="token comment">// 添加远程仓库</span></span>
<span class="line">git remote add origin git@github<span class="token punctuation">.</span>com<span class="token operator">:</span>用户名称<span class="token operator">/</span>仓库名<span class="token punctuation">.</span>git</span>
<span class="line"><span class="token comment">// 推送至远程仓库 -u参数是设置为本地仓库的上游(upstream)</span></span>
<span class="line">git push <span class="token operator">-</span>u origin master</span>
<span class="line"><span class="token comment">// 获取远程仓库</span></span>
<span class="line">git clone git@github<span class="token punctuation">.</span>com<span class="token operator">:</span>用户名称<span class="token operator">/</span>仓库名<span class="token punctuation">.</span>git</span>
<span class="line"></span>
<span class="line"><span class="token comment">// 本地commit回退.回退到某次commit</span></span>
<span class="line">git reset <span class="token operator">--</span>hard commitID</span>
<span class="line"><span class="token comment">// 本地commit回退后，提交让远程仓库同步回退</span></span>
<span class="line">git push <span class="token operator">-</span>f origin main</span>
<span class="line"><span class="token comment">// gitnone语法</span></span>
<span class="line">以”#”号开头表示注释；</span>
<span class="line">以斜杠“<span class="token operator">/</span>”开头表示目录；</span>
<span class="line">以星号“<span class="token operator">*</span>”通配多个字符；</span>
<span class="line">以问号“<span class="token operator">?</span>”通配单个字符</span>
<span class="line">以方括号“<span class="token punctuation">[</span><span class="token punctuation">]</span>”包含单个字符的匹配列表；</span>
<span class="line">以叹号“<span class="token operator">!</span><span class="token function">”表示不忽略</span><span class="token punctuation">(</span>跟踪<span class="token punctuation">)</span>匹配到的文件或目录；</span>
<span class="line"><span class="token operator">*</span><span class="token punctuation">.</span>txt  ，<span class="token operator">*</span><span class="token punctuation">.</span>xls  表示过滤某种类型的文件</span>
<span class="line">target<span class="token operator">/</span> ：表示过滤这个文件夹下的所有文件</span>
<span class="line"><span class="token operator">/</span>test<span class="token operator">/</span>a<span class="token punctuation">.</span>txt ，<span class="token operator">/</span>test<span class="token operator">/</span>b<span class="token punctuation">.</span>xls  表示指定过滤某个文件下具体文件</span>
<span class="line"><span class="token operator">!</span><span class="token operator">*</span><span class="token punctuation">.</span>java <span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">/</span>dir<span class="token operator">/</span>test<span class="token operator">/</span>     <span class="token operator">!</span>开头表示不过滤</span>
<span class="line"><span class="token operator">*</span><span class="token punctuation">.</span><span class="token punctuation">[</span>ab<span class="token punctuation">]</span>    支持通配符：过滤所有以<span class="token punctuation">.</span>a或者<span class="token punctuation">.</span>b为扩展名的文件</span>
<span class="line"><span class="token operator">/</span>test  仅仅忽略项目根目录下的 test 文件，不包括 child<span class="token operator">/</span>test等非根目录的test目录</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const o=n(l,[["render",i]]),r=JSON.parse('{"path":"/posts/weekend/Git.html","title":"GIT","lang":"en-US","frontmatter":{"date":"2025-06-16T00:00:00.000Z","category":["frontend"],"tag":["tag C","tag D"]},"headers":[],"git":{"updatedTime":1750089735000,"contributors":[{"name":"Tom-Lee-CN","username":"Tom-Lee-CN","email":"tomweichat@qq.com","commits":1,"url":"https://github.com/Tom-Lee-CN"}],"changelog":[{"hash":"e0b494e91703a4447a9723c1c58141b1fd0ff96a","time":1750089735000,"email":"tomweichat@qq.com","author":"Tom-Lee-CN","message":"新增几个文档"}]},"filePathRelative":"posts/weekend/Git.md","excerpt":"\\n<div class=\\"language-javascript line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"js\\"><pre><code><span class=\\"line\\"><span class=\\"token comment\\">// 这个命令，会在“~/.gitconfig”中以如下形式输出设置文件。</span></span>\\n<span class=\\"line\\">$ git config <span class=\\"token operator\\">--</span>global user<span class=\\"token punctuation\\">.</span>name <span class=\\"token string\\">\\"Firstname Lastname\\"</span></span>\\n<span class=\\"line\\">$ git config <span class=\\"token operator\\">--</span>global user<span class=\\"token punctuation\\">.</span>email <span class=\\"token string\\">\\"your_email@example.com\\"</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">]</span></span>\\n<span class=\\"line\\">  name <span class=\\"token operator\\">=</span> Firstname Lastname</span>\\n<span class=\\"line\\">  email <span class=\\"token operator\\">=</span> your_email@example<span class=\\"token punctuation\\">.</span>com</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 将 color.ui 设置为 auto 可以让命令的输出拥有更高的可读性。</span></span>\\n<span class=\\"line\\">git config <span class=\\"token operator\\">--</span>global color<span class=\\"token punctuation\\">.</span>ui auto</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// “~/.gitconfig”中就会增加下面一行。</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">[</span>color<span class=\\"token punctuation\\">]</span></span>\\n<span class=\\"line\\">  ui <span class=\\"token operator\\">=</span> auto</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">//生成SSH后复制至GitHub同步</span></span>\\n<span class=\\"line\\">git<span class=\\"token operator\\">-</span>keygen <span class=\\"token operator\\">-</span>t rsa <span class=\\"token operator\\">-</span><span class=\\"token constant\\">C</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 1. git初始化 (必须初始化)</span></span>\\n<span class=\\"line\\">git init</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 2. 查看仓库状态</span></span>\\n<span class=\\"line\\">git status</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 3. 向暂存区添加文件</span></span>\\n<span class=\\"line\\">git add</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 4. 保存仓库的历史纪录 git commit -m \\"快速备注\\"。vim编辑器使用i进行输入，写详细备注时第一行是简要内容，第二行空行，第三行是详细内容。输入完成后按ESC输入:wq完成编辑</span></span>\\n<span class=\\"line\\">git commit</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 中止提交</span></span>\\n<span class=\\"line\\">如果在编辑器启动后想中止提交，提交信息留空并直接关闭编辑器，随后提交就会被中止。</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 修改上一条提交的信息</span></span>\\n<span class=\\"line\\">git commit <span class=\\"token operator\\">--</span>amend</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 5. 查看提交日志 git log -p可查看文件的改动</span></span>\\n<span class=\\"line\\">git log</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 6. 查看当前暂存区与工作树的差别,git diff HEAD是最新差别</span></span>\\n<span class=\\"line\\">git diff</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 显示分支一览表  git branch -a可以查看当前仓库和远程仓库的分支信息</span></span>\\n<span class=\\"line\\">git branch </span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 切换分支</span></span>\\n<span class=\\"line\\">git checkout <span class=\\"token operator\\">-</span>b 分支名</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 合并分支</span></span>\\n<span class=\\"line\\">git merge <span class=\\"token operator\\">--</span>no<span class=\\"token operator\\">-</span>ff 分支名</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 以图标形式查看分支</span></span>\\n<span class=\\"line\\">git log <span class=\\"token operator\\">--</span>graph</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 回溯历史版本</span></span>\\n<span class=\\"line\\">git reset <span class=\\"token operator\\">--</span>head 历史版本的哈希值</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 查看当前仓库执行过的操作的日志</span></span>\\n<span class=\\"line\\">git reflog</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 添加远程仓库</span></span>\\n<span class=\\"line\\">git remote add origin git@github<span class=\\"token punctuation\\">.</span>com<span class=\\"token operator\\">:</span>用户名称<span class=\\"token operator\\">/</span>仓库名<span class=\\"token punctuation\\">.</span>git</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 推送至远程仓库 -u参数是设置为本地仓库的上游(upstream)</span></span>\\n<span class=\\"line\\">git push <span class=\\"token operator\\">-</span>u origin master</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 获取远程仓库</span></span>\\n<span class=\\"line\\">git clone git@github<span class=\\"token punctuation\\">.</span>com<span class=\\"token operator\\">:</span>用户名称<span class=\\"token operator\\">/</span>仓库名<span class=\\"token punctuation\\">.</span>git</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 本地commit回退.回退到某次commit</span></span>\\n<span class=\\"line\\">git reset <span class=\\"token operator\\">--</span>hard commitID</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 本地commit回退后，提交让远程仓库同步回退</span></span>\\n<span class=\\"line\\">git push <span class=\\"token operator\\">-</span>f origin main</span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// gitnone语法</span></span>\\n<span class=\\"line\\">以”#”号开头表示注释；</span>\\n<span class=\\"line\\">以斜杠“<span class=\\"token operator\\">/</span>”开头表示目录；</span>\\n<span class=\\"line\\">以星号“<span class=\\"token operator\\">*</span>”通配多个字符；</span>\\n<span class=\\"line\\">以问号“<span class=\\"token operator\\">?</span>”通配单个字符</span>\\n<span class=\\"line\\">以方括号“<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>”包含单个字符的匹配列表；</span>\\n<span class=\\"line\\">以叹号“<span class=\\"token operator\\">!</span><span class=\\"token function\\">”表示不忽略</span><span class=\\"token punctuation\\">(</span>跟踪<span class=\\"token punctuation\\">)</span>匹配到的文件或目录；</span>\\n<span class=\\"line\\"><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">.</span>txt  ，<span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">.</span>xls  表示过滤某种类型的文件</span>\\n<span class=\\"line\\">target<span class=\\"token operator\\">/</span> ：表示过滤这个文件夹下的所有文件</span>\\n<span class=\\"line\\"><span class=\\"token operator\\">/</span>test<span class=\\"token operator\\">/</span>a<span class=\\"token punctuation\\">.</span>txt ，<span class=\\"token operator\\">/</span>test<span class=\\"token operator\\">/</span>b<span class=\\"token punctuation\\">.</span>xls  表示指定过滤某个文件下具体文件</span>\\n<span class=\\"line\\"><span class=\\"token operator\\">!</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">.</span>java <span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">!</span><span class=\\"token operator\\">/</span>dir<span class=\\"token operator\\">/</span>test<span class=\\"token operator\\">/</span>     <span class=\\"token operator\\">!</span>开头表示不过滤</span>\\n<span class=\\"line\\"><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">[</span>ab<span class=\\"token punctuation\\">]</span>    支持通配符：过滤所有以<span class=\\"token punctuation\\">.</span>a或者<span class=\\"token punctuation\\">.</span>b为扩展名的文件</span>\\n<span class=\\"line\\"><span class=\\"token operator\\">/</span>test  仅仅忽略项目根目录下的 test 文件，不包括 child<span class=\\"token operator\\">/</span>test等非根目录的test目录</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{o as comp,r as data};
